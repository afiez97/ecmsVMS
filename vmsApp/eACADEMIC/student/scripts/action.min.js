class get {
    constructor(url, token) {
        this.url = url;
        this.token = token;
    }

    execute() {
        var settings = {
            "url": this.url,
            "method": "GET",
            "timeout": 0,
            "headers": {
                "Authorization": this.token
            },
            async: false
        };

        let request = $.ajax(settings).responseText;
        if (request != "Unauthorized.") {
            request = JSON.parse(request);
            return request;
        } else {
            request = { success: false, message: request };
            return request;
        }
    }
}

class post {
    constructor(url, form, token) {
        this.url = url;
        this.form = form;
        this.token = token;
    }

    execute() {
        var settings = {
            "url": this.url,
            "method": "POST",
            "timeout": 0,
            "headers": {
                "Authorization": this.token
            },
            "processData": false,
            "mimeType": "multipart/form-data",
            "contentType": false,
            "data": this.form,
            async: false
        };

        let request = $.ajax(settings).responseText;
        if (request != "Unauthorized.") {
            request = JSON.parse(request);
            return request;
        } else {
            request = { success: false, message: request };
            return request;
        }
    }
}

class postPublic{
    constructor(url,form,token){
        this.url = url;
        this.form = form; 
        this.token = token;
    }

    execute(){
        var settings = {
            "url": this.url + "?public=" + this.token,
            "method": "POST",
            "timeout": 0,
            "processData": false,
            "mimeType": "multipart/form-data",
            "contentType": false,
            "data": this.form,
            async: false
        };
    
        let request = $.ajax(settings).responseText;
        if(request != "Unauthorized."){
            request = JSON.parse(request);
            return request;
        } else {
            request = {success: false, message: request};
            return request;
        }
    }
}

class getPublic {
    constructor(url, token) {
        this.url = url;
        this.token = token;
    }

    execute() {
        var settings = {
            "url": this.url + "?public=" + this.token,
            "method": "GET",
            "timeout": 0,
            async: false
        };

        let request = $.ajax(settings).responseText;
        if (request != "Unauthorized.") {
            request = JSON.parse(request);
            return request;
        } else {
            request = { success: false, message: request };
            return request;
        }
    }
}